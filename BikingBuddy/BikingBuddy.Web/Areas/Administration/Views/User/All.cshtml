@model AdminAllUsersQueryModel 
@{
    ViewBag.Title = "All Users";
}
<div class=" text-center text-white">
    <h5 class="text-white">Admins</h5>
</div>
<div class="row">

    <div class="col-3"></div>
    <div class="col-6">
        @await Html.PartialAsync("_AllAdminsPartial", Model.Admins)
    </div>
    <div class="col-3"></div>
</div>

<hr/>
<h5 class="text-center text-white ">@ViewBag.Title</h5>


<form class="container" method="get" asp-area="Administration">
    <div class="row mb-3 ">

        <div class="col-2 sorting">
            <label class="text-white" asp-for="UsersPerPage"></label>
            <select asp-for="UsersPerPage" class="form-control">
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="@Model.TotalUsersCount">All</option>
            </select>
        </div>

        <div class="col-2 sorting">
            <label class="text-white" asp-for="IsDeleted"></label>
            <select asp-for="IsDeleted" class="form-control">
                <option value="0">All</option>
                <option value="1">Available</option>
                <option value="2">Deleted</option>
            </select>
        </div>

        <div class="col-2 sorting">
            <label class="text-white" asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>


        <div class="col-2" style="display: inline-block; padding-top: 32px">
            <input type="submit" value="Sort" class="btn btn-primary"/>
        </div>

    </div>


    <nav aria-label="Page navigation example" class="pagination justify-content-center m-1 ">

        @{
            int previousPage = Model.CurrentPage - 1;
            if (previousPage < 1)
            {
                previousPage = 1;
            }

            int maxPage = (int)Math.Ceiling((double)Model.TotalUsersCount /
                                            Model.UsersPerPage);
        }


        <ul class="pagination justify-content-center ">
            @if (@Model.CurrentPage != 1)
            {
                <li class="page-item m-1">
                    <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled mr-2 ml-2" : string.Empty)"
                       asp-controller="User"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-sorting="@((int)Model.Sorting)">
                        Previous
                    </a>
                </li>
            }


            @for (int i = 1; i <= maxPage; i++)
            {
                <li class="page-item m-1">
                    <a class="btn btn-primary @(Model.CurrentPage == @i ? "disabled mr-2 ml-2" : string.Empty)"
                       asp-controller="User"
                       asp-action="All"
                       asp-route-currentPage="@i"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-sorting="@((int)Model.Sorting)">
                        @i
                    </a>
                </li>
            }
            @{
                bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
                                                !Model.Users.Any();
            }

            @if (@Model.CurrentPage != maxPage)
            {
                <li class="page-item m-1">
                    <a class="btn btn-primary 
                                                @(shouldNextPageBeDisabled ? "disabled mr-2 ml-2" : string.Empty)"
                       asp-controller="User"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-sorting="@((int)Model.Sorting)">
                        Next
                    </a>
                </li>
            }
        </ul>
    </nav>
</form>

<div>
    @await Html.PartialAsync("_AdminAllUsersPartial", Model.Users)
</div>