@using BikingBuddy.Services.Contracts
@model TeamDetailsViewModel
@inject ITeamService teamService
@{
    ViewBag.Title = "Teams Details";

    var isMember = await teamService.IsMemberAsync(User.GetId(), Model.Id);
    ViewDataDictionary dictionary = new ViewDataDictionary(ViewData) { { "teamId", Model.Id } };
}

<div>
    @await Html.PartialAsync("_TeamTopBannerPartial")
</div>

<h2 class="text-center">@ViewBag.Title</h2>
<hr/>

<div class="ek-row">
    <div class="card col-3 ek-containers-margin" @*style="width: 18rem;"*@>
        <img src=@Model.TeamImageUrl class="card-img-top" alt="...">
        <div class="card-body">
            <h3 class="card-title text-center">@Model.Name</h3>
            <p class="mb-0">
                <span class="fw-bold">Location: </span> @Model.Town , @Model.Country
            </p>

            <p class="mb-0">
                <span class="fw-bold">Team Manager: </span>@Model.TeamManager
            </p>
            <p class="mb-0">
                <span class="fw-bold">Established: </span>@Model.EstablishedOn
            </p>

        </div>
        <ul class="list-group list-group-flush">

            <li class="list-group-item">

                <div class="stats w3-left" text-align: -webkit-center>
                    <div class="row w3l-stats-section stats-con">
                        <div class=" stats_info team-stats_info  counter_grid">
                            <i class="far fa-users team-stats_info" style="color: #afafaf;margin-top: 12px;"></i>
                            <p class="counter">@Model.TeamMembers.Count </p>
                            <h3 class="" style="color: #afafaf">Members</h3>
                        </div>
                        <div class=" stats_info counter_grid ">
                            <i class="fas fa-user" style="color: #afafaf"></i>
                            <p class="counter">@Model.MembersRequests.Count</p>
                            <h3 class="team-stats_info" style="color: #afafaf">Requests</h3>
                        </div>
                    </div>
                </div>
            </li>

            <li class="list-group-item">

                @if (!isMember && !await teamService.IsRequestedAsync(User.GetId(), Model.Id))
                {
                    <a asp-controller="Team" asp-action="RequestToJoin" class="btn btn-primary btn-white btn-style  " style="display: block" asp-route-teamId="@Model.Id">Request to join </a>
                }
                else if (!isMember && await teamService.IsRequestedAsync(User.GetId(), Model.Id))
                {
                    <a asp-controller="Team" asp-action="RejectRequest" class="btn btn-primary btn-white btn-style  " style="display: block" asp-route-teamId="@Model.Id">Reject request</a>
                }
                else
                {
                    <a asp-controller="Team" asp-action="RemoveMember" class="btn btn-primary btn-white btn-style  " style="display: block" asp-route-memberId="@User.GetId()" asp-route-teamId="@Model.Id">Leave team </a>
                }

            </li>

            <li class="list-group-item" style=" ">
                <a asp-controller="Team" asp-action="All" class="btn btn-primary btn-white btn-style  " style="display:block"> Back to All Teams</a>

            </li>


        </ul>
        <div class="card-body">
            @if (User.Identity?.Name == Model.TeamManager || User.IsAdmin())
            {
                <h3 style="text-align: center; margin-bottom: 1rem">Team Options</h3>

                <div class="row">
                    <a asp-controller="Team" asp-action="Edit" class="btn btn-warning" asp-route-teamId="@Model.Id">Edit</a>
                    <form class="ml-2" method="post">
                        <button   asp-controller="Team" asp-action="Delete" asp-route-teamId="@Model.Id"   class=" btn btn-danger">Delete</button>
                    </form>
                </div>
            }

        </div> 
    </div>
    <div class="card col-8 ek-containers-margin">
        <div class="card-body">
            <h3 class="card-title text-center">@Model.Name</h3>
            <div>

                @if (Model.GalleryPhotosModels.Any())
                {
                    <div class="float-right"
                         style="
                                    width: 500px;
                                    margin: 10px 30px;">

                        @await Html.PartialAsync("_GalleryPhotosPartial", Model.GalleryPhotosModels)
                    </div>
                }

                <p class="mt-1">
                    <h5 class="fw-bold"> Team Description: </h5> <span> @Model.Description </span>
                </p>
            </div>


            @if (User.Identity?.Name == Model.TeamManager || User.IsAdmin() || isMember)
            {
                <div class="mt-2">
                    @await Html.PartialAsync("_TeamMembersPartial", Model.TeamMembers, dictionary)
                </div>
                @if (User.Identity?.Name == Model.TeamManager || User.IsAdmin())
                {
                    <div class="mt-2">
                        @await Html.PartialAsync("_MembersRequestsPartial", Model.MembersRequests, dictionary)
                    </div>
                }
            }


        </div>


    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
}